{"version":3,"file":"index.min.js","sources":["../src/index.js"],"sourcesContent":["// Create a global stack, event listener with callback function\nconst eventHandlersByMessageId = {};\n\n// Create a callback for the mesasge event.\nfunction receiveMessage(event) {\n  return event && event.data\n    && event.data.responseToMessageId\n    && eventHandlersByMessageId[event.data.responseToMessageId]\n    && eventHandlersByMessageId[event.data.responseToMessageId](event);\n}\n\n// TODO: Use a proper UUID generator\n/* eslint-disable no-bitwise, no-mixed-operators */\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n/* eslint-enable no-bitwise, no-mixed-operators */\n\n// Add the callback to an event listener\nwindow.addEventListener('message', receiveMessage, false);\n\n/**\n * SmartMessenger\n *\n * @example\n *\n * const urlParams = new URLSearchParams(window.location.search);\n * const targetOrigin = urlParams.get('smart_messaging_origin') || '*';\n * const targetWindow = window.opener || window.parent;\n *\n * const messenger = new SmartMessenger(targetWindow, targetOrigin);\n * const payload = { resourceType: \"Basic\" };\n *\n * messenger.send('scratchpad.create', payload, (event) => {\n *  console.log(event);\n *  // ...\n * });\n *\n */\nclass SmartMessenger {\n  constructor(targetWindow, targetOrigin) {\n    this.targetWindow = targetWindow;\n    this.targetOrigin = targetOrigin;\n  }\n\n  // Build message, postMessage and add to the eventHandler stack\n  send(type, payload, eventHandler) {\n    const message = SmartMessenger.buildMessage(type, payload);\n\n    this.targetWindow.postMessage(message, this.targetOrigin);\n    eventHandlersByMessageId[message.messageId] = eventHandler;\n  }\n\n  static buildMessage(type, payload) {\n    return {\n      messageId: uuidv4(),\n      messageType: type,\n      payload,\n    };\n  }\n}\n\nexport default SmartMessenger;\n"],"names":["uuidv4","replace","c","r","Math","random","v","toString","eventHandlersByMessageId","window","addEventListener","event","data","responseToMessageId","SmartMessenger","constructor","targetWindow","targetOrigin","send","type","payload","eventHandler","message","buildMessage","postMessage","messageId","messageType"],"mappings":"2CAAA;AAGA;AAQA;AACA,mDACA,QAASA,CAAAA,CAAT,EAAkB,CAChB,MAAO,uCAAuCC,OAAvC,CAA+C,OAA/C,CAAyDC,CAAD,EAAO,MAC9DC,CAAAA,CAAC,CAAwB,CAArB,CAAgB,EAAhB,CAAAC,IAAI,CAACC,MAAL,EAD0D,CAE9DC,CAAC,CAAS,GAAN,GAAAJ,CAAC,CAAWC,CAAX,CAA0B,CAAV,CAAI,CAAJ,CAAAA,CAFyC,CAGpE,MAAOG,CAAAA,CAAC,CAACC,QAAF,CAAW,EAAX,CACR,CAJM,CAKR,CACD,mDAEA;AArBA,KAAMC,CAAAA,CAAwB,CAAG,EAAjC,CAsBAC,MAAM,CAACC,gBAAP,CAAwB,SAAxB,CAnBA,SAAwBC,CAAxB,CAA+B,CAC7B,MAAOA,CAAAA,CAAK,EAAIA,CAAK,CAACC,IAAf,EACFD,CAAK,CAACC,IAAN,CAAWC,mBADT,EAEFL,CAAwB,CAACG,CAAK,CAACC,IAAN,CAAWC,mBAAZ,CAFtB,EAGFL,CAAwB,CAACG,CAAK,CAACC,IAAN,CAAWC,mBAAZ,CAAxB,CAAyDF,CAAzD,CACN,CAcD,KAEA;;;;;;;;;;;;;;;;;KAkBA,KAAMG,CAAAA,CAAe,CACnBC,WAAW,CAACC,CAAD,CAAeC,CAAf,CAA6B,CACtC,KAAKD,YAAL,CAAoBA,CADkB,CAEtC,KAAKC,YAAL,CAAoBA,CACrB;AAGDC,IAAI,CAACC,CAAD,CAAOC,CAAP,CAAgBC,CAAhB,CAA8B,CAChC,KAAMC,CAAAA,CAAO,CAAGR,CAAc,CAACS,YAAf,CAA4BJ,CAA5B,CAAkCC,CAAlC,CAAhB,CAEA,KAAKJ,YAAL,CAAkBQ,WAAlB,CAA8BF,CAA9B,CAAuC,KAAKL,YAA5C,CAHgC,CAIhCT,CAAwB,CAACc,CAAO,CAACG,SAAT,CAAxB,CAA8CJ,CAC/C,CAED,MAAOE,CAAAA,YAAP,CAAoBJ,CAApB,CAA0BC,CAA1B,CAAmC,CACjC,MAAO,CACLK,SAAS,CAAEzB,CAAM,EADZ,CAEL0B,WAAW,CAAEP,CAFR,CAGLC,OAAO,CAAPA,CAHK,CAKR,CApBkB"}